1  git init
2  git remote add origin https://github.com/trastanechora/panenin-backend.git
3  git pull origin master
4  ls
5  pip3 -v
6  pip -v
7  python3 --version
8  sudo apt install pip3
9  sudo apt install pip
10  sudo apt-get install python3-pip
11  ls
12  pip3 --version
13  pip3 install -r requirements.txt
14  python3 project.py
15  freeze
16  pip3 freeze
17  ls
18  sudo pip3 install virtualenv
19  ls
20  cd ..
21  ls
22  cd ubuntu/
23  git status
24  rm -rf .git
25  ls
26  git status
27  rm -r blueprints/
28  rm project.py 
29  rm requirements.txt 
30  ls
31  git clone https://github.com/trastanechora/panenin-backend.git
32  ls
33  cd panenin-backend/
34  ls
35  cd ..
36  mkvirtualenv venv_project
37  virtualenv -p python3 venv_project
38  ls
39  source venv_project/bin/activate
40  cd panenin-backend/
41  pip3 install -r requirements.txt 
42  ls
43  python3 project.py 
44  git status
45  git pull origin master
46  ls
47  pip3 install -r requirements.txt 
48  python3 project.py 
49  deactivate
50  sudo apt-get install mysql-server
51  systemctl start mysql
52  mysql
53  mysql_secure_installation
54  sudo mysql_secure_installation
55  sudo service restart mysql
56  mysql
57  mysql -u root -p
58  sudo mysql -u root -p
59  ls
60  source ../....sdsd
61  sdffdsf
62  source ../venv_project/bin/activate
63  ls
64  python3 project.py 
65  ls
66  cd ..
67  ls
68  deactivate
69  mysql -u root -p
70  sudo mysql -u root -p
71  source venv_project/bin/activate
72  cd panenin-backend/
73  ls
74* 
75  sudo python3 project.py db init
76  pip3 install -r requirements.txt 
77  sudo python3 project.py db init
78  cat requirements.txt 
79  pip3 install -r requirements.txt 
80  pip3 list
81  sudo python3 project.py db init
82  deactivate 
83  source ../venv_project/bin/activate
84  sudo python3 project.py db init
85  deactivate 
86  sudo apt-get install python3-json
87  sudo apt-get search json
88  sudo apt-cache search json
89  sudo apt-get install python3-jsonpickle 
90  source ../venv_project/bin/activate
91  pip3 install requirements.txt 
92  pip3 install -r requirements.txt 
93  python3 project.py db init
94  ls -la
95  cd blueprints/
96  ls
97  ls -la
98  cd ..
99  ls
100  vim project.py 
101  ls
102  vim blueprints/__init__.py 
103  python3 project.py db init
104  mysql -u root -p
105  netstat -pltn
106  mysql -u root
107  mysql -u root -p
108  sudo /etc/init.d/mysql stop
109  deactivate 
110  sudo apt-get remove --purge mysql* mariadb*
111  sudo rm -rf /etc/mysql
112  sudo apt-get install software-properties-common
113  sudo apt-key adv --recv-keys --keyserver hkp://keyserver.ubuntu.com:80 0xF1656F24C74CD1D8
114  sudo add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://mirror.biznetgio.com/mariadb/repo/10.3/ubuntu bionic main'
115  sudo apt update
116  sudo apt install mariadb-server
117  mysql -u
118  mysql -u root -p
119  python3 project.py db init
120  source ../venv_project/bin/activate
121  python3 project.py db init
122  ls
123  cd blueprints/
124  mkdir storage
125  cd storage/
126  mkdir log
127  cd ../..
128  python3 project.py db init
129  python3 project.py db migrate
130  python3 project.py
131  mysqldump -u root -h localhost -p green_project > filedump.sql
132  ls
133  mysql -u root -p green_project < filedump.sql
134  ls
135  python3 project.py
136  mysql -u root -p test < filedump.sql
137  mysql -u root -p
138  history


netstat -pltn

Buat image container production
--------------------------------

cek:
install docker-cekip local database server untuk digunakan pada container
bind host mariadb/mysql pada server, cek apakah sudah public? (0.0.0.0)
create user non root dengan akses seluruh host dan role 'all privilages'

konfigurasi:
masukkan ip local beserta user mariadb pada konfigurasi aplikasi python anda
build image (pastikan penamaan image nya benar)
jalankan imagenya
buat reverse proxy ke container yang dijalankan pada server menggunakan nginx






